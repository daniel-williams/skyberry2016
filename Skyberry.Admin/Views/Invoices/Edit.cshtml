@model Skyberry.Admin.ViewModels.InvoiceVM

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    bool isCreate = Model.Invoice.Id == Guid.Empty;
    var mode = isCreate ? "Create" : "Edit";
    
    ViewBag.Title = "@mode Invoice";
}

<h2>@mode Invoice</h2>
<hr />

<form action="@Url.Action(@mode)" name="frm" id="frm" enctype="multipart/form-data" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="Invoice.Id" value="@Model.Invoice.Id" />

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        @if (!isCreate)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Invoice.InvoiceNumber, new { @class = "control-label col-xs-2" })
                <div class="col-xs-6">
                    @Html.TextBoxFor(model => model.Invoice.InvoiceNumber, new { @class = "form-control", disabled = "disabled" })
                </div>
                <div class="col-xs-offset-2 col-xs-10">
                    @Html.ValidationMessageFor(model => model.Invoice.InvoiceNumber, null, new { @class = "help-block" })
                </div>
            </div>
        }

        @*@if (isCreate)
        {
            <div class="form-group">
                <label for="FileData" class="control-label col-xs-2">File</label>
                <div class="col-xs-6">
                    <input type="file" name="FileData" id="FileData" class="form-control" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label for="ContractDocument_FilenameOriginal" class="control-label col-xs-2">Filename</label>
                <div class="col-xs-6">
                    @Html.TextBoxFor(model => model.Invoice.FilenameOriginal, new { @class = "form-control" })
                </div>
                <div class="col-xs-offset-2 col-xs-10">
                    @Html.ValidationMessageFor(model => model.Invoice.FilenameOriginal, null, new { @class = "help-block" })
                </div>
            </div>
        }*@

        <div class="form-group">
            <label for="FileData" class="control-label col-xs-2">File</label>
            <div class="col-xs-6">
                <input type="file" name="FileData" id="FileData" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.Title, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                @Html.TextBoxFor(model => model.Invoice.Title, new { @class = "form-control" })
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.Title, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.Description, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.TextAreaFor(model => model.Invoice.Description, new { @class = "form-control" })
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.Description, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.Amount, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                @Html.TextBoxFor(model => model.Invoice.Amount, new { @class = "form-control" })
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.Amount, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.SentDate, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                <input type="text" name="Invoice.StartDate" id="Invoice_StartDate" value="@(Model.Invoice.SentDate.HasValue ? Model.Invoice.SentDate.Value.ToString("M/dd/yyyy") : "")" class="form-control date-range-start" />
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.SentDate, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.DueDate, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                <input type="text" name="Invoice.DueDate" id="Invoice_DueDate" value="@(Model.Invoice.DueDate.HasValue ? Model.Invoice.DueDate.Value.ToString("M/dd/yyyy") : "")" class="form-control date-range-end" />
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.DueDate, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.IsEstimate, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                @Html.CheckBoxFor(model => model.Invoice.IsEstimate)
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.IsEstimate, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.AccountId, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                @Html.DropDownListFor(m => m.Invoice.AccountId, new SelectList(Model.AccountOpts, "Id", "Value", @Model.Invoice.AccountId), new { @class = "form-control" })
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.AccountId, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Invoice.ProjectId, new { @class = "control-label col-xs-2" })
            <div class="col-xs-6">
                @Html.DropDownListFor(m => m.Invoice.ProjectId, new SelectList(Model.ProjectOpts, "Id", "Value", @Model.Invoice.ProjectId), new { @class = "form-control" })
            </div>
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationMessageFor(model => model.Invoice.ProjectId, null, new { @class = "help-block" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
